table1_case_rate <- table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the lower case rate
table1_case_rate %>% arrange(county,combined) %>% distinct(county)
table1_case_rate <- table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the lower case rate
table1_case_rate %>% arrange(county,combined) %>% distinct(county) %>% pull()
table1_case_rate <- table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the lower case rate
table1_case_rate %>% arrange(county,combined)
table1_case_rate
table1_case_rate <- table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the lower case rate
table1_case_rate %>% arrange(county)
table1_case_rate <- table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the lower case rate
table1_case_rate %>% arrange(desc(county))
table1_case_rate <- table1_case_rate %>% select(county, combined) #%>% # note that i took the first occurence of dane, so the lower case rate
table1_case_rate %>% arrange(desc(county))
table1_case_rate %>% arrange(county, desc(combined))
table1_case_rate %>% arrange(county, desc(combined)) %>% distinct(county)
table1_case_rate %>% arrange(county, desc(combined)) %>% distinct(county,.keep_all=TRUE)
table1_case_rate
table1_case_rate <- table1_case_rate %>% select(county, combined) #%>% # note that i took the first occurence of dane, so the higher case rate
table1_case_rate %>% arrange(county, desc(combined)) %>% distinct(county,.keep_all=TRUE)
table1_case_rate
table1 <- table1_names %>% left_join(table1_gender, by = "county") %>% left_join(table1_age, by = "county") %>% left_join(table1_price_index, by = "county") %>% left_join(table1_case_rate, by = "county") #%>% select(County = name, mask_usage, c, y, a, e, range, combined ) #%>% mutate(combined = round(combined, 2))
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
table1
table1_names <- merged %>% group_by(county) %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>%
unite(name, county:n, sep = ", n = ", remove = FALSE)
table1_names
table1_gender <- merged %>% group_by(county, gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage)
table1_gender
table1_age <- merged %>% group_by(county, age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage)
table1_age
table1_price_index <- merged %>% group_by(county) %>% summarize(max_PI = round(max(avg_zscore_price_index, na.rm = TRUE), 1), min_PI = round(min(avg_zscore_price_index, na.rm = TRUE), 1)) %>% unite(range, min_PI:max_PI, sep = "," )
table1_price_index
table1_case_rate <- merged %>% select(county, case_rate, no_cases) %>% unique() %>% filter(no_cases != 538) #%>% mutate(case_rate = round(case_rate, 2) #%>% paste0(case_rate, " (", no_cases, ")", collapse = "")
table1_case_rate
table1_case_rate$combined <- paste0(table1_case_rate$case_rate, " (", table1_case_rate$no_cases, ")")
table1_case_rate <- table1_case_rate %>% select(county, combined) #%>% # note that i took the first occurence of dane, so the higher case rate
table1_case_rate %>% arrange(county, desc(combined)) %>% distinct(county,.keep_all=TRUE)
table1_case_rate
table1_case_rate %>% arrange(county, desc(combined)) %>% distinct(county,.keep_all=TRUE)
table1_case_rate = table1_case_rate %>% arrange(county, desc(combined)) %>% distinct(county,.keep_all=TRUE)
table1_case_rate
table1 <- table1_names %>% left_join(table1_gender, by = "county") %>% left_join(table1_age, by = "county") %>% left_join(table1_price_index, by = "county") %>% left_join(table1_case_rate, by = "county") #%>% select(County = name, mask_usage, c, y, a, e, range, combined ) #%>% mutate(combined = round(combined, 2))
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
table1
View(merged)
merged %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = ""))
merged %>% summarize(n = n(),
mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = ""),
Female = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")
)
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage)
merged %>% group_by(county, age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage)
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage)
table1_case_rate
merged %>% select(county, case_rate, no_cases) %>% unique() %>% filter(no_cases != 538)
merged %>% select(county, case_rate, no_cases) %>% unique() %>% filter(no_cases != 538)
merged %>% select(case_rate, no_cases) %>% unique() %>% filter(no_cases != 538)
# Make a total column
cbind(merged %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")),
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage),
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage))
# Make a total column
cbind(merged %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")),
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage),
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage),
rep(0,2)
)
# Make a total column
cbind(merged %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")),
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage),
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage),
0,0
)
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
rbind(table1,total
# Make a total column
total = cbind(merged %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")),
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage),
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage),
0,0
)
# Make a total column
total = cbind(merged %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")),
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage),
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage),
0,0)
table1 <- table1_names %>% left_join(table1_gender, by = "county") %>% left_join(table1_age, by = "county") %>% left_join(table1_price_index, by = "county") %>% left_join(table1_case_rate, by = "county") #%>% select(County = name, mask_usage, c, y, a, e, range, combined ) #%>% mutate(combined = round(combined, 2))
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
rbind(table1,total)
ncol(total)
ncol(table1)
View(table1)
View(total)
# Make a total column
total = cbind("Wisconsin","Total",merged %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")),
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = gender, values_from = mask_usage),
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>% pivot_wider(names_from = age, values_from = mask_usage),
0,0)
ncol(total)
table1 <- table1_names %>% left_join(table1_gender, by = "county") %>% left_join(table1_age, by = "county") %>% left_join(table1_price_index, by = "county") %>% left_join(table1_case_rate, by = "county") #%>% select(County = name, mask_usage, c, y, a, e, range, combined ) #%>% mutate(combined = round(combined, 2))
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
rbind(table1,total)
ncol(table1)
View(table1)
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
final_table1 = rbind(table1,total)
ncol(final_tabl1)
ncol(final_table1)
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
final_table1 = rbind(table1,total)
View(total)
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
final_table1 = bind_rows(table1,total)
View(final_table1)
colnames(total) = colnames(table1)
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
final_table1 = bind_rows(table1,total)
#colnames(table1) <- c("County", "Total", "Male", "Female", "<18", "18-29", "30-59", "60+", "Price Index", "Cases per 100k")
final_table1 = rbind(table1,total)
View(final_table1)
table1
write.csv(table1, "Demographics/table.csv",sep="\t")
write.table(table1, "Demographics/table.csv")
write.table(table1, "Demographics/table.csv",sep="\t")
write.table(table1, "Demographics/table.txt",sep="\t")
write.table(table1, "Demographics/table.txt",sep="\t",quotes=F)
write.table(table1, "Demographics/table.txt",sep="\t",quote=F)
?write.table
write.table(table1, "Demographics/table.txt",sep="\t",quote=F,row.names=F)
write.table(final_table1, "Demographics/table.txt",sep="\t",quote=F,row.names=F)
# Let's calculate some odds ratios ####
library(tidyverse)
#install.packages("ggpubr")
library(ggpubr)
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
str(merged)
write.csv(table1, "merged.csv")
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv(merged)
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("merged.csv")
merged
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("merged.csv",row.names = 1)
merged
read.csv
?read.csv
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("merged.csv",row.names = 1, as.is = T)
merged
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("merged.csv",row.names = 1, check.names = F)
merged
write.csv(merged, "merged.csv")
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("merged.csv",row.names = 1, check.names = F)
str(merged)
head(merged)
write.csv(merged, "merged.csv")
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("merged.csv",row.names = 1, check.names = F)
head(merged)
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("InputData/meta_merged_observed.csv",row.names = 1, check.names = F)
head(merged)
head(merged)
str(merged)
merged$gender <- recode(merged$gender, `0` = "Male", `1` = "Female")
merged$age <- recode(merged$age, a = "30-59", c = "<18", y = "18-29", e = "60+")
merged$age <- fct_relevel(merged$age, levels = c("<18", "18-29", "30-59", "60+"))
merged$age <- droplevels(merged$age)
print(dim(merged))
gender <- merged %>% group_by(gender) %>% summarize(`Percentage wearing face-coverings` = sum(mask, na.rm = TRUE)/n()*100) %>% ggplot(aes(x = as.factor(gender), y = `Percentage wearing face-coverings`)) + geom_bar(stat = "identity") + xlab(" ") + theme_bw()
age <- merged %>% group_by(age) %>% summarize(`Percentage wearing face-coverings` = sum(mask, na.rm = TRUE)/n()*100) %>% ggplot(aes(x = as.factor(age), y = `Percentage wearing face-coverings`)) + geom_bar(stat = "identity") + xlab(" ") + theme_bw()
#merged %>% ggplot(aes(x = workplaces_percent_change_from_baseline)) + geom_histogram()
gender
age
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
install.packages("Hmisc")
require(Hmisc)
require(reshape2)
m = polr(mask ~ age + gender + avg_zscore_price_index, data = merged, Hess=TRUE)
class(merged)
class(merged$mask)
class(merged$age)
class(merged$gender)
merged$gender <- as.factor(recode(merged$gender, `0` = "Male", `1` = "Female"))
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("InputData/meta_merged_observed.csv",row.names = 1, check.names = F, stringsAsFactors = 1)
head(merged)
str(merged)
merged$gender <- as.factor(recode(merged$gender, `0` = "Male", `1` = "Female"))
merged$age <- recode(merged$age, a = "30-59", c = "<18", y = "18-29", e = "60+")
merged$age <- fct_relevel(merged$age, levels = c("<18", "18-29", "30-59", "60+"))
merged$age <- droplevels(merged$age)
print(dim(merged))
class(merged$gender)
class(merged$mask)
merged$mask = as.factor(merged$mask)
m = polr(mask ~ age + gender + avg_zscore_price_index, data = merged, Hess=TRUE)
summary(glm(location~gender + age +avg_zscore_price_index + case_rate, data = data))
summary(glm(location~gender + age +avg_zscore_price_index + case_rate, data = merged))
summary(glm(mask ~ gender + age +avg_zscore_price_index + case_rate, data = merged))
View(merged)
summary(glm(mask ~ gender  + avg_zscore_price_index + case_rate, data = merged))
summary(glm(mask ~ gender + case_rate, data = merged))
summary(glm(mask ~ gender, data = merged))
str(merged)
model = glm(mask ~ gender, data = merged)
model = glm(mask ~ gender, data = merged[,c("mask","gender")])
model = glm(gender ~ age, data = merged)
model = glm(gender ~ age, data = merged)
complete(merged$mask)
is.na(merged$mask)
sum(is.na(merged$mask))
model = glm(mask ~ age, data = merged)
merged
model = glm(mask ~ age, data = merged,family=binomial)
model
model = glm(mask ~ age + avg_zscore_price_index, data = merged,family=binomial)
summary(model)
model = glm(mask ~ age + avg_zscore_price_index + gender, data = merged,family=binomial)
summary(model)
model = glm(mask ~., data = merged, family=binomial)
model = glm(mask ~ age + avg_zscore_price_index + gender + date, data = merged, family=binomial)
summary(model)
exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95)))
?level
?as.factor()
str(merged)
model = glm(mask ~ age + avg_zscore_price_index + gender + date + no_cases, data = merged, family=binomial)
summary(model)
exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95)))
summary(model)
install.packages("meta")
library(meta)
library(meta)
install.packages("ggforestplot")
devtools::install_github("NightingaleHealth/ggforestplot")
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("NightingaleHealth/ggforestplot")
df_linear <-
ggforestplot::df_linear_associations %>%
dplyr::arrange(name) %>%
dplyr::filter(dplyr::row_number() <= 30)
df_linear
df_logodds <-
df_logodds_associations %>%
dplyr::arrange(name) %>%
dplyr::left_join(ggforestplot::df_NG_biomarker_metadata, by = "name") %>%
dplyr::filter(group == "Amino acids") %>%
# Set the study variable to a factor to preserve order of appearance
# Set class to factor to set order of display.
dplyr::mutate(
study = factor(
study,
levels = c("Meta-analysis", "NFBC-1997", "DILGOM", "FINRISK-1997", "YFS")
)
)
df_logodds <-
df_logodds_associations %>%
dplyr::arrange(name) %>%
dplyr::left_join(ggforestplot::df_NG_biomarker_metadata, by = "name") %>%
dplyr::filter(group == "Amino acids") %>%
# Set the study variable to a factor to preserve order of appearance
# Set class to factor to set order of display.
dplyr::mutate(
study = factor(
study,
levels = c("Meta-analysis", "NFBC-1997", "DILGOM", "FINRISK-1997", "YFS")
)
)
# Forestplot
forestplot(
df = df_logodds,
estimate = beta,
logodds = TRUE,
colour = study,
shape = study,
title = "Associations to type 2 diabetes",
xlab = "Odds ratio for incident type 2 diabetes (95% CI)
per 1−SD increment in metabolite concentration"
) +
# You may also want to add a manual shape scale to mark meta-analysis with a
# diamond shape
ggplot2::scale_shape_manual(
values = c(23L, 21L, 21L, 21L, 21L),
labels = c("Meta-analysis", "NFBC-1997", "DILGOM", "FINRISK-1997", "YFS")
)
library(ggforestplot)
# Forestplot
forestplot(
df = df_logodds,
estimate = beta,
logodds = TRUE,
colour = study,
shape = study,
title = "Associations to type 2 diabetes",
xlab = "Odds ratio for incident type 2 diabetes (95% CI)
per 1−SD increment in metabolite concentration"
) +
# You may also want to add a manual shape scale to mark meta-analysis with a
# diamond shape
ggplot2::scale_shape_manual(
values = c(23L, 21L, 21L, 21L, 21L),
labels = c("Meta-analysis", "NFBC-1997", "DILGOM", "FINRISK-1997", "YFS")
)
devtools::install_github("NightingaleHealth/ggforestplot", build_vignettes = TRUE)
devtools::install_github("NightingaleHealth/ggforestplot", build_vignettes = TRUE, force = TRUE)
library(ggforestplot)
# Forestplot
forestplot(
df = df_logodds,
estimate = beta,
logodds = TRUE,
colour = study,
shape = study,
title = "Associations to type 2 diabetes",
xlab = "Odds ratio for incident type 2 diabetes (95% CI)
per 1−SD increment in metabolite concentration"
) +
# You may also want to add a manual shape scale to mark meta-analysis with a
# diamond shape
ggplot2::scale_shape_manual(
values = c(23L, 21L, 21L, 21L, 21L),
labels = c("Meta-analysis", "NFBC-1997", "DILGOM", "FINRISK-1997", "YFS")
)
# Forestplot
forestplot(
df = df_logodds,
estimate = beta,
logodds = TRUE,
colour = study,
shape = study,
title = "Associations to type 2 diabetes",
xlab = "Odds ratio for incident type 2 diabetes (95% CI)
per 1−SD increment in metabolite concentration"
) +
# You may also want to add a manual shape scale to mark meta-analysis with a
# diamond shape
ggplot2::scale_shape_manual(
values = c(23L, 21L, 21L, 21L, 21L),
labels = c("Meta-analysis", "NFBC-1997", "DILGOM", "FINRISK-1997", "YFS")
)
install.packages("forestplot")
library(forestplot)
library(forestplot)
OR = exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95)))
OR = exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95)))
OR = exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95)))
OR
OR$`Odds ratio`
OR[,1
OR[,1]
class(OR)
OR = data.frame(exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95))))
class(OR)
OR[,1]
forest = structure(list(
mean = OR[,1],
lower = OR[,2],
upper = OR[,3]
))
forest
forest = structure(list(
mean = OR[,1],
lower = OR[,2],
upper = OR[,3],
.Names = c("mean", "lower", "upper"),
row.names = c(NA, -11L),
class = "data.frame")
))
forest = structure(list(
mean = OR[,1],
lower = OR[,2],
upper = OR[,3],
.Names = c("mean", "lower", "upper"),
row.names = c(NA, -11L),
class = "data.frame")
)
forest
# Cochrane data from the 'rmeta'-package
cochrane_from_rmeta <-
structure(list(
mean  = c(NA, NA, 0.578, 0.165, 0.246, 0.700, 0.348, 0.139, 1.017, NA, 0.531),
lower = c(NA, NA, 0.372, 0.018, 0.072, 0.333, 0.083, 0.016, 0.365, NA, 0.386),
upper = c(NA, NA, 0.898, 1.517, 0.833, 1.474, 1.455, 1.209, 2.831, NA, 0.731)),
.Names = c("mean", "lower", "upper"),
row.names = c(NA, -11L),
class = "data.frame")
forestplot(tabletext,
cochrane_from_rmeta)
?forestplot
# Let's calculate some odds ratios ####
library(tidyverse)
#install.packages("ggpubr")
library(ggpubr)
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("InputData/meta_merged_observed.csv",row.names = 1, check.names = F, stringsAsFactors = 1)
head(merged)
str(merged)
merged$gender <- as.factor(recode(merged$gender, `0` = "Male", `1` = "Female"),)
merged$age <- recode(merged$age, a = "30-59", c = "<18", y = "18-29", e = "60+")
merged$age <- fct_relevel(merged$age, levels = c("<18", "18-29", "30-59", "60+"))
merged$age <- droplevels(merged$age)
merged$gender <- as.factor(recode(merged$gender, `0` = "Male", `1` = "Female"))
merged$age <- recode(merged$age, a = "30-59", c = "<18", y = "18-29", e = "60+")
merged$age <- fct_relevel(merged$age, levels = c("<18", "18-29", "30-59", "60+"))
merged$age <- droplevels(merged$age)
print(dim(merged))
gender <- merged %>% group_by(gender) %>% summarize(`Percentage wearing face-coverings` = sum(mask, na.rm = TRUE)/n()*100) %>% ggplot(aes(x = as.factor(gender), y = `Percentage wearing face-coverings`)) + geom_bar(stat = "identity") + xlab(" ") + theme_bw()
View(merged)
merged
merged$mask = as.factor(merged$mask)
class(merged$mask)
sum(is.na(merged$mask))
model = glm(mask ~ age + avg_zscore_price_index + gender + date + no_cases, data = merged, family=binomial)
summary(model)
str(merged)
View(merged)
#View(merged)
#merged
OR = data.frame(exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95))))
OR
model = glm(mask ~ age + avg_zscore_price_index + gender + date + no_cases + weekend, data = merged, family=binomial)
model = glm(mask ~ age + avg_zscore_price_index + gender + date + no_cases + weekend, data = merged, family=binomial)
summary(model)
str(merged)
#View(merged)
#merged
OR = data.frame(exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95))))
OR
merged$weekend = as.factor(merged$weekend)
merged$mask = as.factor(merged$mask)
class(merged$mask)
sum(is.na(merged$mask))
model = glm(mask ~ age + avg_zscore_price_index + gender + date + no_cases + weekend, data = merged, family=binomial)
summary(model)
str(merged)
#View(merged)
#merged
OR = data.frame(exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95))))
OR
model = glm(mask ~ age + avg_zscore_price_index + gender + no_cases + weekend, data = merged, family=binomial)
summary(model)
str(merged)
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("InputData/meta_merged_observed.csv",row.names = 1, check.names = F, stringsAsFactors = 1)
head(merged)
str(merged)
merged$gender <- as.factor(recode(merged$gender, `0` = "Male", `1` = "Female"))
merged = merged %>% filter(!name=="whl_fds")
head(merged)
merged$age <- recode(merged$age, a = "30-59", c = "<18", y = "18-29", e = "60+")
merged$age <- fct_relevel(merged$age, levels = c("<18", "18-29", "30-59", "60+"))
merged$age <- droplevels(merged$age)
print(dim(merged))
merged$weekend = as.factor(merged$weekend)
#merged <- read.csv("/content/drive/Shared drives/MSTP 2019/Project - PPE/meta_merged_observed_mobility_race_income.csv") %>% filter(!(age %in% c("t", "0")), !(name %in% c("whl_fds", "metfalfes")), type == "grocery")
merged = read.csv("InputData/meta_merged_observed.csv",row.names = 1, check.names = F, stringsAsFactors = 1)
head(merged)
str(merged)
merged$gender <- as.factor(recode(merged$gender, `0` = "Male", `1` = "Female"))
merged = merged %>% filter(!name=="whl_fds")
merged$age <- recode(merged$age, a = "30-59", c = "<18", y = "18-29", e = "60+")
merged$age <- fct_relevel(merged$age, levels = c("<18", "18-29", "30-59", "60+"))
merged$age <- droplevels(merged$age)
print(dim(merged))
merged$weekend = as.factor(merged$weekend)
merged$mask = as.factor(merged$mask)
class(merged$mask)
sum(is.na(merged$mask))
model = glm(mask ~ age + avg_zscore_price_index + gender + no_cases + weekend, data = merged, family=binomial)
summary(model)
model = glm(mask ~ age + avg_zscore_price_index + gender + no_cases + weekend + location, data = merged, family=binomial)
summary(model)
str(merged)
#View(merged)
#merged
OR = data.frame(exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95))))
OR
model = glm(mask ~ no_cases, data = merged, family=binomial)
summary(model)
model = glm(mask ~ case_rate, data = merged, family=binomial)
summary(model)
model = glm(location ~ case_rate, data = merged, family=binomial)
summary(model)
exp(0.014520)
model = glm(mask ~ no_cases age + avg_zscore_price_index + gender + no_cases, data = merged, family=binomial)
summary(model)
model = glm(mask ~ no_cases age + avg_zscore_price_index + gender + no_cases, data = merged, family=binomial)
summary(model)
model = glm(mask ~ no_cases + age + avg_zscore_price_index + gender + no_cases, data = merged, family=binomial)
summary(model)
model = glm(mask ~ case_rate + age + avg_zscore_price_index + gender + no_cases, data = merged, family=binomial)
summary(model)
model = glm(mask ~ case_rate + age + avg_zscore_price_index + gender, data = merged, family=binomial)
summary(model)
plot(density(merged$case_rate))
plot(density(merged$no_cases))
plot(merged$avg_zscore_price_index,location)
plot(merged$avg_zscore_price_index,merged$location)
model = glm(location ~ AvgZscorePriceIndex, data = merged, family=binomial)
model = glm(location ~ avg_zscore_price_index, data = merged, family=binomial)
summary(model)
exp(.42)
