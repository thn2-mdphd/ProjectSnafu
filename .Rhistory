subtitle = paste0("KS p val = ", round(income$p.value,3)),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
) + theme(legend.position = "none")
ggarrange(i,r)
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggarrange(i,r)
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme(legend.position = "none",
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
ggsave("combined_KS.png",
width = 8,
height = 5)
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
ggsave("combined_KS.png",
width = 8,
height = 5)
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + theme_classic()
ggarrange(i,r)
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + theme_classic()
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_pubr(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_pubr(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_bw(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_bw() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_bw() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + xlab(label)
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + xlab(label)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + xlab(label)
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
ggsave("combined_KS.png",
width = 8,
height = 5)
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))) + theme_classic() + theme(legend.position = "none") + xlab(label)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))) + theme_classic() + theme(legend.position = "none") + xlab(label)
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))) + theme_classic() + theme(legend.position = "none")
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))) + theme_classic() + theme(legend.position = "none")
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))) + theme_classic() #+ theme(legend.position = "none")
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() #+ theme(legend.position = "none")
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() #+ theme(legend.position = "none")
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none")
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
# KS tests to determine if the two distributions are similar.
percent_white = ks.test(all_race$percent_white, stuff_race$percent_white)
income = ks.test(all$adj_median_income, stuff$adj_median_income)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + theme(
axis.title.y= "Density",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggarrange(i,r)
# KS tests to determine if the two distributions are similar.
percent_white = ks.test(all_race$percent_white, stuff_race$percent_white)
income = ks.test(all$adj_median_income, stuff$adj_median_income)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + theme(
axis.title.y= "Density",
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("Median Income")
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("% Non-White")
ggarrange(i,r)
ggsave("combined_KS.png",
width = 8,
height = 5)
ggarrange(i,r)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + theme(
axis.title.y= "Density",
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("Median Income")
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("% Non-White")
ggarrange(i,r)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("Median Income") + ylab("Density")
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("% Non-White")
ggarrange(i,r)
# Plot the two densities together
plot_df = data.frame(Category="Our Data", Var=stuff$adj_median_income, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all$adj_median_income, check.names=F))
i = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + ggtitle("Median Income") + labs(
title = "Median Income",
subtitle = paste0("KS p val = ", round(percent_white$p.value,3))
) + theme_classic() + theme(legend.position = "none") + theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("Median Income per Census Tract") + ylab("Density")
plot_df = data.frame(Category="Our Data", Var=stuff_race$percent_white, check.names=F)
plot_df = rbind(plot_df, data.frame(Category="WI", Var=all_race$percent_white, check.names=F))
r = ggplot(plot_df, aes(x = Var, color = Category)) + geom_density() + labs(
title = "Race",
subtitle = paste0("KS p val = ", round(income$p.value,3))
) + theme_classic() + theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + xlab("% Non-White per Census Tract")
ggarrange(i,r)
ggsave("combined_KS.png",
width = 8,
height = 5)
View(all)
View(census_race)
complete(all$adj_media_income)
is.an(all$adj_media_income)
is.na(all$adj_media_income)
all$adj_media_income
all$adj_median_income
complete.cases(all$adj_median_income)
sum(complete.cases(all$adj_median_income))
sum(complete.cases(all$adj_median_income))/length(all$adj_median_income))
sum(complete.cases(all$adj_median_income))/length(all$adj_median_income)
# Check
sum(complete.cases(all_race$percent_white))/length(all_race$percent_white) # 98% data complete
sum(complete.cases(all$adj_median_income))/length(all$adj_median_income) # 98% data complete
# Check missing data
not(complete.cases(all$adj_median_income))
# Check missing data
all[not(complete.cases(all$adj_median_income)),]
# Check, these are public data
sum(complete.cases(stuff_race$percent_white))/length(stuff_race$percent_white) # 98.8% data complete
sum(complete.cases(stuff$adj_median_income))/length(stuff$adj_median_income) # 98.1% data complete
# Check, these are public data
sum(complete.cases(stuff_race$percent_white))/length(stuff_race$percent_white) # 84% data complete
sum(complete.cases(stuff$adj_median_income))/length(stuff$adj_median_income) # 84.6% data complete
# Check missing data, these are public data
all[not(complete.cases(stuff$adj_median_income)),]
# Check missing data, these are public data
all[not(complete.cases(stuff$adj_median_income)),]
# Check missing data, these are public data
stuff[not(complete.cases(stuff$adj_median_income)),]
# Check missing data, these are public data
stuff[not(complete.cases(stuff$adj_median_income)),]
View(all)
View(census_race)
stuff[not(complete.cases(stuff$percent_white)),]
stuff_race[not(complete.cases(stuff_race$percent_white)),]
stuff_race[not(complete.cases(stuff_race$percent_white)),]$complete_id
# Check missing data, these are public data
stuff[not(complete.cases(stuff$adj_median_income)),]
stuff[not(complete.cases(stuff$adj_median_income)),]$complete_id
stuff_race[not(complete.cases(stuff_race$percent_white)),]$complete_id
table1_case_rate = table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the higher case rate
arrange(county, desc(combined)) %>% distinct(county, .keep_all=TRUE)
table1_case_rate
table1_case_rate = table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the higher case rate
arrange(county, desc(combined)) #%>% distinct(county, .keep_all=TRUE)
table1_case_rate
table1_case_rate$combined = paste0(table1_case_rate$case_rate, " (", table1_case_rate$no_cases, ")")
table1_case_rate = table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the higher case rate
arrange(county, desc(combined)) #%>% distinct(county, .keep_all=TRUE)
table1_case_rate
table1_case_rate = merged %>% select(county, case_rate, no_cases) %>%
unique()
table1_case_rate
table1_case_rate$combined = paste0(table1_case_rate$case_rate, " (", table1_case_rate$no_cases, ")")
table1_case_rate = table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the higher case rate
arrange(county, desc(combined)) #%>% distinct(county, .keep_all=TRUE)
table1_case_rate
### Install packages only if not present
if (!require("ggpubr")) install.packages("ggpubr")
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("forestplot")) install.packages("forestplot")
if (!require("ggmap")) install.packages("ggmap")
if (!require("maps")) install.packages("maps")
if (!require("mapdata")) install.packages("mapdata")
### Setting working directory for Github repo
setwd('~/Documents/GitHub/ProjectSnafu')
# SECTION 1: Generate Price Index AND combine into observation table ####
ppe_meta = read.csv("InputData/ppe_meta_data.csv - CURRENT - ppe_meta_data.csv - Sheet1.csv", stringsAsFactors = FALSE)
ppe_meta = ppe_meta %>% filter(type=="grocery")
str(ppe_meta)
ppe_meta$price_of_good = as.numeric(ppe_meta$price_of_good)
AvgZscorePriceIndex = ppe_meta %>%
filter(!(name_of_good == "oranges")) %>%
group_by(name_of_good) %>%
mutate(zscore_price = (price_of_good-mean(price_of_good, na.rm = TRUE)) / sd(price_of_good, na.rm = TRUE)) %>%
group_by(id) %>%
summarize(avg_zscore_price_index = mean(zscore_price, na.rm = TRUE),
median_zscore_price_index = median(zscore_price, na.rm = TRUE)) %>%
left_join(ppe_meta, by = "id") %>%
select(id = id, county = county, name = name, type = type, location = location, avg_zscore_price_index, median_zscore_price_index) %>%
unique()
# Making combined file of ppe and avg price
small_PI_table = AvgZscorePriceIndex %>%
select(id, avg_zscore_price_index, median_zscore_price_index)
ppe_obs = read.csv("InputData/ppe_observation_data - CURRENT - ppe_observation_data - Sheet1.csv", stringsAsFactors = FALSE) %>%
filter(type=="grocery") %>%
left_join(small_PI_table, by = "id")
# Convert blank observations to zero
ppe_obs[is.na(ppe_obs)] = 0
merged = ppe_obs
merged$age = replace(merged$age, merged$age=="A", "a")
merged$age = replace(merged$age, merged$age=="E", "e")
merged$age = replace(merged$age, merged$age=="Y", "y")
merged$age = replace(merged$age, merged$age=="C", "c")
# Filter out rows with the non-standard typo notation of ages
merged = merged %>% filter(age %in% c("a","e","y","c"))
old_age_to_new_age_mapping = data.frame(age = c("a", "e", "y", "c", "t"),
age_two_bins = c("30+", "30+", "0-29", "0-29", "0-29")) # 2-bin age not used for analysis
merged = merged %>% left_join(old_age_to_new_age_mapping, by = "age")
hist(merged$avg_zscore_price_index)
# SECTION 2: Generate TABLE 1 ####
table1_names = merged %>% group_by(county) %>% summarize(n = n(), mask_usage = paste0(c(sum(mask),"/", n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>%
unite(name, county:n, sep = ", n = ", remove = FALSE)
table1_names
table1_gender = merged %>% group_by(county, gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/", n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>%
pivot_wider(names_from = gender, values_from = mask_usage)
table1_gender
table1_age = merged %>% group_by(county, age) %>% summarize(mask_usage = paste0(c(sum(mask), "/", n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>%
pivot_wider(names_from = age, values_from = mask_usage)
table1_age
table1_price_index = merged %>% group_by(county) %>% summarize(max_PI = round(max(avg_zscore_price_index, na.rm = TRUE), 1),
min_PI = round(min(avg_zscore_price_index, na.rm = TRUE), 1)) %>% unite(range, min_PI:max_PI, sep = "," )
table1_price_index
table1_case_rate = merged %>% select(county, case_rate, no_cases) %>%
unique()
table1_case_rate
table1_case_rate$combined = paste0(table1_case_rate$case_rate, " (", table1_case_rate$no_cases, ")")
table1_case_rate = table1_case_rate %>% select(county, combined) %>% # note that i took the first occurence of dane, so the higher case rate
arrange(county, desc(combined)) %>% distinct(county, .keep_all=TRUE)
table1_case_rate
## Finally, make a total row for bottom of table, as 1 row dataframe
total = cbind("Wisconsin", "Total", merged %>%
summarize(n = n(), mask_usage = paste0(c(sum(mask),"/",n(), " (", round(sum(mask)/n()*100, 1), ")"), collapse = "")),
merged %>% group_by(gender) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>%
pivot_wider(names_from = gender, values_from = mask_usage),
merged %>% group_by(age) %>% summarize(mask_usage = paste0(c(sum(mask), "/",n()," (", round(sum(mask)/n()*100, 1), ")"), collapse = "")) %>%
pivot_wider(names_from = age, values_from = mask_usage),
0,0)
ncol(total)
## Setup the final Data Frame
table1 = table1_names %>% left_join(table1_gender, by = "county") %>% left_join(table1_age, by = "county") %>%
left_join(table1_price_index, by = "county") %>% left_join(table1_case_rate, by = "county")
colnames(total) = colnames(table1)
final_table1 = rbind(table1, total) # combine main table with total row
View(final_table1)
merged$gender = as.factor(recode(merged$gender, `0` = "Male", `1` = "Female"))
merged$gender = fct_relevel(merged$gender, ref = "Male")
merged$age = recode(merged$age, a = "30-59", c = "<18", y = "18-29", e = "60+")
merged$age = fct_relevel(merged$age, levels = c("<18", "18-29", "30-59", "60+"))
merged$age = droplevels(merged$age)
print(dim(merged))
merged$mask = as.factor(merged$mask)
class(merged$mask)
str(merged)
# Setting threshold for high case rate vs low case rate
threshold = 800
plot(density(merged$case_rate))
abline(v=threshold,col="red")
test = merged
# regular show: actual block ####
# Running the logistic regression
model = glm(mask ~ age + avg_zscore_price_index + gender + case_rate, data = merged, family = binomial)
summary(model)
# Converting logistic regression coef. into adjusted OR
OR = data.frame(exp(cbind("Odds ratio" = coef(model), confint.default(model, level = 0.95))), pvalue = summary(model)$coefficients[,4], check.names = F)
OR
# Remove the intercept row
abbreviated_1 = OR[-1,1]
abbreviated_2 = OR[-1,2]
abbreviated_3 = OR[-1,3]
abbreviated_4 = OR[-1,4]
# SECTION 4: Plot figure 1B for aOR ####
tabletext=cbind(
c(" ", "Young adult", "Adult", "Older adult", "High price index", "Female gender", "High case prevalence"),
c("aOR", formatC(abbreviated_1, digits = 2, drop0trailing = FALSE, format = "f")),
c("Lower CI", formatC(abbreviated_2, digits = 2, format = "f", drop0trailing = FALSE)),
c("Upper CI", formatC(abbreviated_3, digits = 2, format = "f", drop0trailing = FALSE)),
c("P-value", formatC(abbreviated_4, format = "e", digits = 2)))
tabletext
